name: Build-Test-Push
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE.md'
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE.md'

jobs:
  build-test-push:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ruby: ["3.0.5","3.1.3","3.2.0"]
        image: ["slim", "ubuntu-20.04", "ubuntu-22.04"]
        include:
          - ruby: "3.0.5"
            ruby_checksum: "9afc6380a027a4fe1ae1a3e2eccb6b497b9c5ac0631c12ca56f9b7beb4848776"
          - ruby: "3.1.3"
            ruby_checksum: "5ea498a35f4cd15875200a52dde42b6eb179e1264e17d78732c3a57cd1c6ab9e"
          - ruby: "3.2.0"
            ruby_checksum: "daaa78e1360b2783f98deeceb677ad900f3a36c0ffa6e2b6b19090be77abc272"
    steps:
      - name: Set image_name
        id: context
        run: |
          if [[ "${{ matrix.image }}" == "slim" ]] ; then
            echo "image_name=ruby:${{ matrix.ruby }}-slim" >> ${GITHUB_OUTPUT}
          elif [[ "${{ matrix.image }}" == "ubuntu-20.04" ]] ; then
            echo "image_name=ubuntu:20.04" >> ${GITHUB_OUTPUT}
          elif [[ "${{ matrix.image }}" == "ubuntu-22.04" ]] ; then
            echo "image_name=ubuntu:22.04" >> ${GITHUB_OUTPUT}
          fi

          if [[ "${{ startsWith(matrix.ruby, '3.2') }}" == "true" ]] ; then
            echo "flags=--enable-yjit" >> ${GITHUB_OUTPUT}
          else
            echo "flags=''" >> ${GITHUB_OUTPUT}
          fi
      - uses: actions/checkout@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore Docker cache
        uses: actions/cache@v3
        with: 
          path: ${{ github.workspace }}/cache
          key: ${{ runner.os }}-docker-${{ hashfiles('cache/**') }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        name: Build
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=local,src=${{ github.workspace }}/cache
          cache-to: type=local,dest=${{ github.workspace }}/cache
          build-args: |
            RUBY_VERSION=${{ matrix.ruby }}
            RUBY_CHECKSUM=${{ matrix.ruby_checksum }}
            IMAGE_NAME=${{ steps.context.outputs.image_name }}
            ADDITIONAL_FLAGS=${{ steps.context.outputs.flags }}
          tags: "ghcr.io/moritzheiber/ruby-jemalloc:${{ matrix.ruby }}-${{ matrix.image }}"
